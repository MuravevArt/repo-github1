# 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и
# строк и сохраните в переменные, выведите на экран.

a = 15
b = 20
print(a)
print(b)

number1 = int(input("Введите первое число: "))
number2 = int(input("Введите второе число: "))
number3 = int(input("Введите третье число: "))
line1 = input("Введите первую строку: ")
line2 = input("Введите вторую строку: ")

print("Вы ввели следующие числа: {0}, {1}, {2}.".format(number1, number2, number3))
print("Вы ввели следующие строки: {0}, {1}.".format(line1, line2))

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.

user_seconds = int(input("Введите время в секундах: "))

minutes = user_seconds // 60
seconds = user_seconds % 60
hour = user_seconds // 60 // 60

if seconds < 10:
    seconds = f"0{seconds}"
# elif seconds > 60:
# seconds = user_seconds % 60

if minutes >= 60:
    minutes = user_seconds % 60

if minutes < 10:
    minutes = f"0{minutes}"

if hour < 10:
    hour = f"0{hour}"

print(f"Это равно: {hour}:{minutes}:{seconds}")
# На этом этапе ступор. Если вводим 60000 секунд, должно получиться 16:40:00, а выводит 16:00:00

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3
# + 33 + 333 = 369.

n = int(input("Пожалуйста, введите число n: "))

temp = str(n)
t1 = temp + temp
t2 = temp + temp + temp
summ = n + int(t1) + int(t2)

print("Сумма чисел n + nn + nnn равна: ", summ)

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл
# while и арифметические операции.

count = int(input("Пожалуйста, введите целое положительное число: "))
max_count = count % 10
count = count // 10
while count > 0:
    if count % 10 > max_count:
        max_count = count % 10
    count = count // 10
print("Максимальная цифра в числе: ", max_count)

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает
# фирма (прибыль — выручка больше издержек, или убыток — издержки больше выручки). Выведите соответствующее
# сообщение. Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

proceeds = int(input("Пожалуйста, введите значение выручки: "))  # Запрашиваем значение выручки
costs = int(input("Пожалуйста, введите значение издержек: "))  # Запрашиваем значение издержки

if proceeds > costs:
    print("Ваша компания прибыльна!")

    profitability = proceeds / costs
    number_of_employees = int(input("Введите количество сотрудников в вашей компании: "))
    profit_per_employee = (proceeds - costs) // number_of_employees
    print("Прибыль компании в расчете на одного сотрудника:", profit_per_employee)

else:
    print("Ваша компания убыточна!")

# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день
# спортсмен увеличивал результат на 10 % относительно предыдущего. Требуется определить номер дня, на который
# результат спортсмена составит не менее b километров. Программа должна принимать значения параметров a и b и
# выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.

first_day = int(input("Введите результат за первый день: "))
record_km = int(input("Введите необходиый результат: "))

number_day = 1
while first_day < record_km:
    first_day *= 1.1
    number_day += 1

print("На", number_day,"-й день спортсмен достиг результата - не менее", record_km, "км.")
